---
  - name: "ansible code to pull code from github and push to ec2"
    hosts: localhost
    vars:
      key_pair: ansible-aws-git
      region: us-east-2
      sgroup: ansible-sec-git
      instance_type: t2.micro
      ami_id: ami-0dacb0c129b49f529
      ami_user: ec2-user
      gitrepo: 'https://github.com/saviojoy20/testfile.git'

    tasks:
      - name: "Aws InfraStructure Creation - KeyPair Creation"
        ec2_key:
            region: "{{ region }}"
            name: "{{ key_pair }}"
            state: present
        register: key_out

      - debug:
            var: key_out

      - name: "Aws InfraStructure Creation - KayPair Saving"
        when: key_out.changed == true
        copy:
          content: '{{ key_out.key.private_key }}'
          dest: '{{key_pair}}.pub'
          mode: '0400'

      - name: "Aws InfraStructure Creation - Security Group Creation"
        ec2_group:
          name: "{{ sgroup }}"
          description: "Security Group Using Ansible"
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0

            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0

          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0

      - name: "Aws InfraStructure Creation - Ec2 Creation"
        ec2:
          instance_type: "{{instance_type}}"
          key_name: "{{key_pair}}"
          image: "{{ ami_id }}"
          region: "{{ region }}"
          group: "{{ sgroup }}"
          wait: no
          instance_tags:
              Name: "Webserver"
              project: "uber"
          count_tag:
              Name: "Webserver"
          exact_count: 1

        register: ec2_out

      - debug:
          var: ec2_out

      - name: "Aws InfraStructure Creation - Inventory Creation"
        add_host:
            groups: webserver
            name: "{{ item.public_ip }}"
            ansible_host: "{{ item.public_ip }}"
            ansible_port: 22
            ansible_user: "{{ ami_user }}"
            ansible_ssh_private_key_file: "{{ key_pair }}.pub"
            ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        with_items:
          - "{{ ec2_out.tagged_instances }}"

      - name: Wait for SSH to come up
        delegate_to: "{{ item.public_dns_name }}"
        wait_for_connection:
            delay: 20
            timeout: 100
        loop: "{{ ec2_out.instances }}"
   
  - name: "installing apache git and pulling code from gihub"
    hosts: webserver
    become: true
    tasks:
      - name: "Installing Webserver"
        yum:
          name:
           - httpd
           - git
          state: present

      - name : "pulling file from source"
        git:
          repo: 'https://github.com/saviojoy20/testfile.git'
          dest: /var/www/html/
        register: gitreplay
      - name : "printing git replay information" 
        debug:
          var: gitreplay 
      - name: "restarting"
        service:
          name: httpd
          state: restarted
          enabled: true       
  
